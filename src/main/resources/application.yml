#公共配置,任何环境都会加载这个配置
spring:
  application:
    name: api-backend  #项目的名称
  #数据库的配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3307/xiaowc_api
    username: root
    password: 123456
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER  #如果springboot版本大于2.6，需要修改默认路径匹配策略
  #设置session的失效时间
  session:
    timeout: 86400
    store-type: redis  #默认是none，表示存储在单台服务器，这里配置表示直接将session存入到redis中，表示从redis读写session
  # redis 配置
  redis:
    port: 6379
    host: localhost
    database: 0  #默认使用redis的第0个数据库
server:
  port: 7529  #程序的启动端口
  servlet:
    context-path: /api  #指定接口全局api，让后台所有请求的地址都要加上这个/api
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: false  #关闭下划线自动转换为驼峰
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl  #控制台输出日志
  #配置逻辑删除
  global-config:
    db-config:
      logic-delete-field: isDelete # 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)
#下面的配置表明我们引入了自定义的sdk客户端调用工具，这样我们就可以快速的调用第三方接口
api:
  client:
    access-key: xiaowc
    secret-key: 12345678
# 这段配置仅供测试，实际应该根据登录用户获取对应的 ak、sk
dubbo:
  application:
    name: dubbo-springboot-demo-provider
  protocol:
    name: dubbo
    port: -1
  registry:
    id: nacos-registry
    address: nacos://localhost:8848
